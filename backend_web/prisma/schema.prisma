// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["deno"]
  output          = "../generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id   Int    @id @default(autoincrement())
  Game Game[]
}

model Game {
  id                  Int                 @id @default(autoincrement())
  userId              Int
  user                User                @relation(fields: [userId], references: [id])
  number              Int
  year                Int
  name                String
  playerName          String?
  currentDay          Int                 @default(0)
  currentDayCompleted Boolean             @default(false)
  currentRerollTokens Int                 @default(7)
  rerollTokensSpent   Int                 @default(0)
  repositoryLink      String?
  progressSheetLink   String?
  public              Boolean             @default(false)
  rankId              Int
  excludedModifiers   ChallengeModifier[]
  excludedOptions     ModifierOption[]
  score               Int                 @default(0)
  dateCreated         DateTime            @default(now())
  dateCompleted       DateTime?
  Rank                Rank                @relation(fields: [rankId], references: [id])
  Day                 Day[]
}

model Rank {
  id           Int    @id @default(autoincrement())
  name         String @unique
  minimumScore Int
  Game         Game[]
}

model Day {
  id                           Int                @id @default(autoincrement())
  game                         Game               @relation(fields: [gameId], references: [id])
  number                       Int
  part1Completed               Boolean            @default(false)
  part2Completed               Boolean            @default(false)
  modifier                     ChallengeModifier? @relation(fields: [challengeModifierId], references: [id])
  modifierOption               ModifierOption?    @relation(fields: [modifierOptionId], references: [id])
  challengeModifierRerollsUsed Int                @default(0)
  modifierOptionRerollsUsed    Int                @default(0)
  challengeModifierId          Int?
  modifierOptionId             Int?
  gameId                       Int
}

model ChallengeModifier {
  id             Int              @id @default(autoincrement())
  name           String           @unique
  text           String
  hasOptions     Boolean          @default(false)
  ModifierOption ModifierOption[]
  Day            Day[]
  Game           Game[]
  gameId         Int?
}

model ModifierOption {
  id                  Int                @id @default(autoincrement())
  name                String             @unique
  text                String
  Day                 Day[]
  ChallengeModifier   ChallengeModifier? @relation(fields: [challengeModifierId], references: [id])
  challengeModifierId Int?
  Game                Game[]
  gameId              Int?
}
